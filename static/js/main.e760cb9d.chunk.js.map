{"version":3,"sources":["redux/action.js","mailPreviewList.js","modal.js","composeModal.js","mail.js","Login.js","App.js","serviceWorker.js","redux/mailReducer.js","redux/mailEditReducer.js","redux/userReducer.js","redux/composeEmailReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["selectEmail","emailPreview","console","log","id","type","payload","composeEmail","state","closeCompose","importEmails","emails","MailPreviewList","_this","this","props","mail","map","react_default","a","createElement","key","onClick","show","Sender","Recipient","className","Subject","MailBody","createListItems","Component","connect","EmailList","dispatch","bindActionCreators","Modal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sendMail","e","axios","method","url","data","from","currentUser","to","currentEmail","subject","msg","then","res","catch","_this2","href","value","onChange","setState","target","role","mailEditReducer","userReducer","email","ComposeModal","recipient","reply","composeEmailReducer","Mail","getInbox","inbox","user","Show","getSentmail","getTrash","displayLog","message","placeholder","mailPreviewList","modal","composeModal","ownProps","Login","createUser","password","alert","loginCheck","cur_User","window","location","loginRequest","islogged","routeChange","logged","handleChange","event","defineProperty","handleSubmit","preventDefault","displayScreenLog","bind","assertThisInitialized","length","history","push","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","Button","block","disabled","validateForm","mapDispatchToProps","loginInfo","App","BrowserRouter","Route","path","render","src_Login_0","Switch","component","Boolean","hostname","match","initialState","mailReducer","arguments","undefined","action","test","messages","assign","username","rootReducers","combineReducers","store","createStore","rootReducer","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e760cb9d.chunk.js","sourcesContent":["export const selectEmail = (emailPreview) => {\r\n    console.log(\"you selected email: \", emailPreview.id);\r\n    return{\r\n        type: 'EMAIL_SELECTED',\r\n        payload: emailPreview\r\n    }\r\n\r\n};\r\n\r\nexport const composeEmail = (state) =>{\r\n    console.log(\"Compose Email Action\");\r\n    return{\r\n        type: 'COMPOSE_EMAIL',\r\n        payload: state\r\n\r\n    }\r\n}\r\n\r\nexport const closeCompose = (state) =>{\r\n    console.log(\"Close Compose Action\");\r\n    return{\r\n        type: 'CLOSE_COMPOSE',\r\n        payload: state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const importEmails = (emails) => {\r\n    return{\r\n        type: 'Email_Import',\r\n        payload: emails\r\n    }\r\n};\r\n\r\nexport const loginRequest = (loginInfo) => {\r\n    return { \r\n        type: 'LOGIN_REQUEST',\r\n        payload: loginInfo\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {selectEmail} from \"./redux/action\";     \r\n\r\nclass MailPreviewList extends Component{\r\n\r\n\r\n\r\n    createListItems(){\r\n        return this.props.mail.map((emailPreview) => {\r\n            return(\r\n            <tr key={emailPreview.id}\r\n                onClick = {() => this.props.selectEmail(emailPreview)}>\r\n                <td>{this.props.show ? emailPreview.Sender : emailPreview.Recipient}</td>\r\n                <td className=\"nowrap\">{emailPreview.Subject}</td>\r\n                <td className=\"truncate\">{emailPreview.MailBody}\r\n                </td>\r\n            </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <tbody>\r\n            {this.createListItems()}\r\n            </tbody>\r\n    );\r\n    }\r\n\r\n}\r\n\r\n//this is where I'm importing the EmailList from the global variable that's created in the rootReducer\r\n//I'm mapping it to state (instance variables) and using it in the createListItems() function to create the tables\r\nfunction mapStateToProps(state){\r\n    return{\r\n        mail : state.EmailList,\r\n    };\r\n\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({selectEmail: selectEmail}, dispatch)\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(MailPreviewList);","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {selectEmail} from \"./redux/action\";\r\n\r\nimport axios from 'axios' \r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            from: this.props.currentEmail.Sender,\r\n            to: this.props.currentUser,\r\n            subject: this.props.currentEmail.Subject,\r\n            msg: \"\"\r\n        };\r\n    }\r\n\r\n\r\n\r\n\r\n    sendMail = e => {\r\n        axios({\r\n          method: \"POST\",\r\n          url: \"/send\",\r\n          data: {\r\n            from: this.props.currentUser,\r\n            to: this.props.currentEmail.Sender,\r\n            subject: \"RE: \" + this.props.currentEmail.Subject,\r\n            msg: this.state.msg \r\n          }\r\n        })\r\n          .then(res => {\r\n            this.props.selectEmail(\"\")\r\n            console.log(res.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      };\r\n\r\n    render(){\r\n        return (<div className=\"modal\">\r\n                <header className=\"modal-header\">\r\n                    <span className=\"label\">Read Message</span>\r\n                    <button href=\"close\" className=\"ui black button\" onClick = {() =>  this.props.selectEmail(\"\")}>\r\n                        <i className=\"remove icon\" />\r\n                    </button>\r\n                </header>\r\n                <div className=\"modal-container\">\r\n                    <div className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <label>From :</label>\r\n                            <div>{this.props.currentEmail.Sender}</div>\r\n                        </div>\r\n                        <div className=\"ui divider\"></div>\r\n                        <div className=\"inline fields\">\r\n                            <label>Subject:</label>\r\n                            <div>{this.props.currentEmail.Subject}</div>\r\n                        </div>\r\n                        <div className=\"ui divider\"></div>\r\n                        <div className=\"field\">\r\n                            <p>{this.props.currentEmail.MailBody}</p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Type Reply Here:<textarea value={this.state.msg}\r\n                            onChange={e => this.setState({msg: e.target.value})} /></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n\r\n                    <button type=\"button\" className=\"ui primary button\" role=\"button\" onClick={this.sendMail}>\r\n                    Reply</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        mail : state.EmailList,\r\n        currentEmail: state.mailEditReducer.currentEmail,\r\n        currentUser: state.userReducer.email\r\n    };\r\n\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({selectEmail: selectEmail}, dispatch)\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Modal);","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {closeCompose, composeEmail} from \"./redux/action\";\r\nimport axios from \"axios\";\r\n\r\nclass ComposeModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.routeChange = this.routeChange.bind(this);\r\n        this.state = {\r\n          recipient: \"\",\r\n          subject: \"\",\r\n          msg: \"\",\r\n        };\r\n      }\r\n\r\n sendMail = e => {\r\n     axios({\r\n         method: \"POST\",\r\n         url: \"/send\",\r\n         data: {\r\n         from: this.props.currentUser,\r\n         to: this.state.recipient,\r\n         subject: this.state.subject,\r\n         msg: this.state.msg \r\n         }\r\n     })\r\n         .then(res => {\r\n         this.props.closeCompose()\r\n         console.log(res.data);\r\n         })\r\n         .catch(e => {\r\n         console.log(e);\r\n         });\r\n     };\r\n\r\n    render(){\r\n        return (<div id=\"compose-modal\" className=\"modal\">\r\n                <header className=\"modal-header\">\r\n                    <span className=\"label\">Compose Message</span>\r\n                    <button href=\"close\" className=\"ui black button\" onClick = {() => this.props.closeCompose()}>\r\n                        <i className=\"remove icon\" />\r\n                    </button>\r\n                </header>\r\n                <div className=\"modal-container\">\r\n                    <div className=\"ui form\">\r\n                        <div className=\"inline fields\">\r\n                            <label>From :</label>\r\n                            <div>{this.props.currentUser}</div>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <label>To:</label>\r\n                            <input value={this.state.recipient} onChange={e => this.setState({recipient: e.target.value})} ></input>\r\n                        </div>\r\n                        <div className=\"inline fields\">\r\n                            <label>Subject:</label>\r\n                            <input value={this.state.subject} onChange={e => this.setState({subject: e.target.value})}></input>\r\n                        </div>\r\n                        <div className=\"ui divider\"></div>\r\n                        <div className=\"field\">\r\n                        <label>Compose Email:<textarea value={this.state.msg}\r\n                            onChange={e => this.setState({msg: e.target.value})} /></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n\r\n                    <button type=\"button\" className=\"ui primary button\" role=\"button\" onClick={this.sendMail}>Send</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        composeEmail: state.mailEditReducer.composeEmail,\r\n        currentUser: state.userReducer.email,\r\n        reply: state.composeEmailReducer.reply\r\n\r\n    };\r\n\r\n}\r\n\r\nfunction matchDispatchToProps(dispatch) {\r\n    return bindActionCreators({composeEmail: composeEmail, closeCompose: closeCompose}, dispatch)\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(ComposeModal);","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport MailPreviewList from \"./mailPreviewList\";\r\nimport {closeCompose, importEmails} from \"./redux/action\";\r\nimport Modal from \"./modal\";\r\nimport ComposeModal from \"./composeModal\";\r\nimport axios from \"axios\";\r\nimport {composeEmail} from \"./redux/action\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass Mail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        from: \"\",\r\n        to: \"\",\r\n        message: \"\",\r\n        inbox: true\r\n    };\r\n\r\n  }\r\n\r\n    getInbox = e => {\r\n      this.setState({inbox:true})\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/mail\",\r\n      data: {\r\n        user: this.props.currentUser,\r\n        Show: \"Inbox\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.props.importEmails(res.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  getSentmail = e => {\r\n    this.setState({inbox:false})\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/mail\",\r\n      data: {\r\n        user: this.props.currentUser,\r\n        Show: \"Sent\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.props.importEmails(res.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  getTrash = e => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/mail\",\r\n      data: {\r\n        user: this.props.currentUser,\r\n        Show: \"Trash\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.props.importEmails(res.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  displayLog = (e) => {\r\n    console.log(this.props.currentUser)\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.getInbox();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"red ui header\">\r\n            <i className=\"envelope open outline icon\" />O-mail\r\n          </h1>\r\n          <div className=\"sidenav\">\r\n              {/*<button onClick={this.displayLog}>currentUserTesting</button>*/}\r\n\r\n            <div className=\"fluid ui large vertical buttons\">\r\n            \r\n              <button href=\"Sent\" className=\"ui primary button\" onClick = {() => this.props.composeEmail(this.state)}>\r\n                <i className=\"paper plane icon\" />Compose\r\n              </button>\r\n              <button  className=\"fluid ui button\" onClick={this.getInbox}>\r\n                <i className=\"inbox icon\" />Inbox\r\n              </button>\r\n\r\n              <button className=\"fluid ui button\" onClick={this.getSentmail}>\r\n                <i className=\"envelope icon\" />Sent Mail\r\n              </button>\r\n              <button href=\"Trash\" className=\"fluid ui button\" onClick={this.getTrash}>\r\n                <i className=\"trash icon\" />Trash\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"main\">\r\n            <div className=\"search-container\">\r\n              <div className=\"fluid ui action input\">\r\n                <input type=\"text\" placeholder=\"Search...\" />\r\n                <button className=\"ui button\">\r\n                  <i className=\"search icon\" />Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"rows\">\r\n              <table id=\"table\" className=\"ui striped compact selectable celled table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>{this.state.inbox ? \"From\" : \"to\"}</th>\r\n                    <th>Subject</th>\r\n                    <th>Preview</th>\r\n                  </tr>\r\n                </thead>\r\n                \r\n                <MailPreviewList show={this.state.inbox}/>\r\n              </table>\r\n              {this.props.currentEmail && <Modal/>}\r\n              {this.props.reply && <ComposeModal/>}\r\n              </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n const mapStateToProps = (state, ownProps) => {\r\n   return{\r\n       currentEmail: state.mailEditReducer.currentEmail,\r\n       currentUser: state.userReducer.email,\r\n       reply: state.composeEmailReducer.reply\r\n\r\n   };\r\n };\r\n\r\n//const mapDispatchToProps = { importEmails };\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({composeEmail: composeEmail, importEmails, closeCompose: closeCompose}, dispatch)\r\n\r\n}\r\n\r\n\r\nexport default connect(\r\n   mapStateToProps,mapDispatchToProps\r\n)(Mail);\r\n","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"./redux/action\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      cur_User: \"\",\r\n      islogged: false\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  createUser = e => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/create\",\r\n      data: {\r\n        user: this.state.email,\r\n        password: this.state.password\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (!res.data) {\r\n          alert(\"Username already in use.\");\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n\r\n  routeChange(){\r\n    if(this.state.islogged)\r\n    {\r\n      let path = `logged`;\r\n      this.props.history.push(path);\r\n    }\r\n    };\r\n\r\n  loginCheck = e => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"/login\",\r\n      data: {\r\n        user: this.state.email,\r\n        password: this.state.password\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.data) {\r\n          if(this.state.cur_User === \"easteregg\") { \r\n            window.location.href = 'http://csc412sfsu.com/~pnaing/Game.html';\r\n          }\r\n            this.props.loginRequest(this.state.cur_User);\r\n            this.state.islogged = true;\r\n        } else {\r\n          alert(\"Username or Password is incorrect\");\r\n        }\r\n      }).then(\r\n        this.routeChange\r\n      )\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    this.setState({\r\n      cur_User: this.state.email,\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  displayLog = e => {\r\n    console.log(this.props.logged);\r\n    console.log(this.props.currentUser);\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  displayScreenLog = e => {\r\n    if (this.setState.state) {\r\n      alert(\"Username already in use.\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <h1 className=\"red ui header\">\r\n          <i className=\"envelope open outline icon\" />O-mail\r\n        </h1>\r\n        <form onSubmit={this.handleSubmit} className=\"login-panel\">\r\n          <FormGroup controlId=\"email\" bsSize=\"large\" className=\"email\">\r\n            <ControlLabel>Email:</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"text\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\" className=\"password\">\r\n            <ControlLabel>Password:</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button className=\"ui primary button login\"\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n            onClick={this.loginCheck}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button className=\"ui secondary button create\"\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n            onClick={this.createUser}\r\n          >\r\n            Create User\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentUser: state.userReducer.email\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { loginRequest };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Mail from \"./mail\";\r\nimport Login from \"./Login\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div>\r\n\r\n            <Route\r\n              path=\"/\"\r\n              render={() =>\r\n                this.props.logged ? <Login /> :  <Mail /> \r\n              }\r\n            />\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/logged\" component={Mail} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n      logged: state.userReducer.logged\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = { };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = [];\r\n\r\nconst mailReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Email_Import':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mailReducer;","const initialState = {\r\n    test: 'test value',\r\n    messages: ['a demo message'],\r\n    currentEmail: null\r\n};\r\n\r\nconst mailEditReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'EMAIL_SELECTED':\r\n            return Object.assign({},state,{\r\n                currentEmail: action.payload,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mailEditReducer;","const initialState = {\r\n    email: 'pyae',\r\n    logged: true\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_REQUEST':\r\n        return Object.assign({},state,{\r\n            email: action.payload,\r\n            logged: false,\r\n        });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","const initialState = {\r\n    currentEmail: false,\r\n    username: null,\r\n    reply: false,\r\n\r\n};\r\n\r\n\r\nconst composeEmailReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'COMPOSE_EMAIL':\r\n            return Object.assign({},state,{\r\n                reply : true\r\n            });\r\n        case 'CLOSE_COMPOSE':\r\n            return Object.assign({},state,{\r\n                reply : false\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default composeEmailReducer;","import {combineReducers} from 'redux';\r\nimport mailReducer from './mailReducer';\r\nimport mailEditReducer from './mailEditReducer';\r\nimport userReducer from './userReducer'\r\nimport composeEmailReducer from './composeEmailReducer'\r\n\r\n//combines the various reducers that will be used in the project into one large JS Object\r\nconst rootReducers = combineReducers({\r\n    EmailList: mailReducer,\r\n    mailEditReducer,\r\n    userReducer,\r\n    composeEmailReducer\r\n});\r\n\r\nexport default rootReducers;","import {createStore} from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\n//creates the redux store from all of the reducers that are referenced in the rootReducer\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store.js';\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n    <App />\r\n    </Provider>\r\n    ,   document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}